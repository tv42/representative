// Code generated by github.com/tv42/becky -- DO NOT EDIT.

package static

var _ = addAsset(asset{Name: "play.js", Content: "" +
	"// Copyright 2012 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\nfunction initPlayground(transport) {\n\t'use strict';\n\n\tfunction text(node) {\n\t\tvar s = '';\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\tvar n = node.childNodes[i];\n\t\t\tif (n.nodeType === 1) {\n\t\t\t\tif (n.tagName === 'BUTTON') continue\n\t\t\t\tif (n.tagName === 'SPAN' && n.className === 'number') continue;\n\t\t\t\tif (n.tagName === 'DIV' || n.tagName == 'BR') {\n\t\t\t\t\ts += \"\\n\";\n\t\t\t\t}\n\t\t\t\ts += text(n);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (n.nodeType === 3) {\n\t\t\t\ts += n.nodeValue;\n\t\t\t}\n\t\t}\n\t\treturn s.replace('\\xA0', ' '); // replace non-breaking spaces\n\t}\n\n\t// When presenter notes are enabled, the index passed\n\t// here will identify the playground to be synced\n\tfunction init(code, index) {\n\t\tvar output = document.createElement('div');\n\t\tvar outpre = document.createElement('pre');\n\t\tvar running;\n\n\t\tif ($ && $(output).resizable) {\n\t\t\t$(output).resizable({\n\t\t\t\thandles: \t'n,w,nw',\n\t\t\t\tminHeight:\t27,\n\t\t\t\tminWidth:\t135,\n\t\t\t\tmaxHeight:\t608,\n\t\t\t\tmaxWidth:\t990\n\t\t\t});\n\t\t}\n\n\t\tfunction onKill() {\n\t\t\tif (running) running.Kill();\n\t\t\tif (window.notesEnabled) updatePlayStorage('onKill', index);\n\t\t}\n\n\t\tfunction onRun(e) {\n\t\t\tvar sk = e.shiftKey || localStorage.getItem('play-shiftKey') === 'true';\n\t\t\tif (running) running.Kill();\n\t\t\toutput.style.display = 'block';\n\t\t\toutpre.innerHTML = '';\n\t\t\trun1.style.display = 'none';\n\t\t\tvar options = {Race: sk};\n\t\t\trunning = transport.Run(text(code), PlaygroundOutput(outpre), options);\n\t\t\tif (window.notesEnabled) updatePlayStorage('onRun', index, e);\n\t\t}\n\n\t\tfunction onClose() {\n\t\t\tif (running) running.Kill();\n\t\t\toutput.style.display = 'none';\n\t\t\trun1.style.display = 'inline-block';\n\t\t\tif (window.notesEnabled) updatePlayStorage('onClose', index);\n\t\t}\n\n\t\tif (window.notesEnabled) {\n\t\t\tplaygroundHandlers.onRun.push(onRun);\n\t\t\tplaygroundHandlers.onClose.push(onClose);\n\t\t\tplaygroundHandlers.onKill.push(onKill);\n\t\t}\n\n\t\tvar run1 = document.createElement('button');\n\t\trun1.innerHTML = 'Run';\n\t\trun1.className = 'run';\n\t\trun1.addEventListener(\"click\", onRun, false);\n\t\tvar run2 = document.createElement('button');\n\t\trun2.className = 'run';\n\t\trun2.innerHTML = 'Run';\n\t\trun2.addEventListener(\"click\", onRun, false);\n\t\tvar kill = document.createElement('button');\n\t\tkill.className = 'kill';\n\t\tkill.innerHTML = 'Kill';\n\t\tkill.addEventListener(\"click\", onKill, false);\n\t\tvar close = document.createElement('button');\n\t\tclose.className = 'close';\n\t\tclose.innerHTML = 'Close';\n\t\tclose.addEventListener(\"click\", onClose, false);\n\n\t\tvar button = document.createElement('div');\n\t\tbutton.classList.add('buttons');\n\t\tbutton.appendChild(run1);\n\t\t// Hack to simulate insertAfter\n\t\tcode.parentNode.insertBefore(button, code.nextSibling);\n\n\t\tvar buttons = document.createElement('div');\n\t\tbuttons.classList.add('buttons');\n\t\tbuttons.appendChild(run2);\n\t\tbuttons.appendChild(kill);\n\t\tbuttons.appendChild(close);\n\n\t\toutput.classList.add('output');\n\t\toutput.appendChild(buttons);\n\t\toutput.appendChild(outpre);\n\t\toutput.style.display = 'none';\n\t\tcode.parentNode.insertBefore(output, button.nextSibling);\n\t}\n\n\tvar play = document.querySelectorAll('div.playground');\n\tfor (var i = 0; i < play.length; i++) {\n\t\tinit(play[i], i);\n\t}\n}\n" +
	"", etag: `"9EjmEIwbwhY="`})
